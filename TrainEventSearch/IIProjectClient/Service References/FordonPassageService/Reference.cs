//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIProjectClient.FordonPassageService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FordonPassageService.IFordonPassageService")]
    public interface IFordonPassageService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFordonPassageService/GetFordonPassage", ReplyAction="http://tempuri.org/IFordonPassageService/GetFordonPassageResponse")]
        System.Xml.Linq.XElement GetFordonPassage(System.Xml.Linq.XElement xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFordonPassageService/GetAllLocations", ReplyAction="http://tempuri.org/IFordonPassageService/GetAllLocationsResponse")]
        System.Xml.Linq.XElement GetAllLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFordonPassageService/GetVehicleFromEpc", ReplyAction="http://tempuri.org/IFordonPassageService/GetVehicleFromEpcResponse")]
        System.Xml.Linq.XElement GetVehicleFromEpc(string epc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFordonPassageService/GetLocationFromEpc", ReplyAction="http://tempuri.org/IFordonPassageService/GetLocationFromEpcResponse")]
        System.Xml.Linq.XElement GetLocationFromEpc(string epc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFordonPassageService/AuthorizeUser", ReplyAction="http://tempuri.org/IFordonPassageService/AuthorizeUserResponse")]
        bool AuthorizeUser(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFordonPassageServiceChannel : IIProjectClient.FordonPassageService.IFordonPassageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FordonPassageServiceClient : System.ServiceModel.ClientBase<IIProjectClient.FordonPassageService.IFordonPassageService>, IIProjectClient.FordonPassageService.IFordonPassageService {
        
        public FordonPassageServiceClient() {
        }
        
        public FordonPassageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FordonPassageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FordonPassageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FordonPassageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Xml.Linq.XElement GetFordonPassage(System.Xml.Linq.XElement xml) {
            return base.Channel.GetFordonPassage(xml);
        }
        
        public System.Xml.Linq.XElement GetAllLocations() {
            return base.Channel.GetAllLocations();
        }
        
        public System.Xml.Linq.XElement GetVehicleFromEpc(string epc) {
            return base.Channel.GetVehicleFromEpc(epc);
        }
        
        public System.Xml.Linq.XElement GetLocationFromEpc(string epc) {
            return base.Channel.GetLocationFromEpc(epc);
        }
        
        public bool AuthorizeUser(string username) {
            return base.Channel.AuthorizeUser(username);
        }
    }
}
